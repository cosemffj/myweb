# # name: Deploy to Synology NAS via SSH (rsync + PM2)

# # on:
# #   push:
# #     branches: [ main ]

# # jobs:
# #   deploy:
# #     runs-on: ubuntu-latest

# #     steps:
# #       # 1️⃣ 코드 체크아웃
# #       - name: Checkout repository
# #         uses: actions/checkout@v4

# #       # 2️⃣ SSH 비밀키 설정
# #       - name: Setup SSH
# #         uses: webfactory/ssh-agent@v0.8.0
# #         with:
# #           ssh-private-key: ${{ secrets.NAS_SSH_KEY }}

# #       # 3️⃣ NAS 호스트 키 등록
# #       - name: Add NAS host key
# #         run: |
# #           mkdir -p ~/.ssh
# #           ssh-keyscan -H ${{ secrets.NAS_IP }} >> ~/.ssh/known_hosts

# #       # 4️⃣ NAS에 파일 복사 (rsync, node_modules 제외)
# #       - name: Rsync to Synology NAS
# #         run: |
# #           rsync -avz --no-perms \
# #             --delete \
# #             --exclude='.git' \
# #             --exclude='node_modules' \
# #             --ignore-errors \
# #             -e "ssh -o StrictHostKeyChecking=no" \
# #             ./ admin@${{ secrets.NAS_IP }}:/volume1/web/myweb/

# #       # 5️⃣ NAS에서 npm install & PM2 재시작 (sudo 비번 없이)
# #       - name: Install dependencies & Restart PM2
# #         run: |
# #           ssh -o StrictHostKeyChecking=no admin@${{ secrets.NAS_IP }} << 'EOF'
# #             cd /volume1/web/myweb
# #             sudo npm install
# #             sudo /usr/local/bin/pm2 restart all
# #             sudo pm2 save
# #           EOF

# name: Deploy to Synology NAS via SSH (rsync + PM2)

# on:
#   push:
#     branches: [ main ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # 1️⃣ 코드 체크아웃
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       # 2️⃣ SSH 비밀키 설정
#       - name: Setup SSH
#         uses: webfactory/ssh-agent@v0.8.0
#         with:
#           ssh-private-key: ${{ secrets.NAS_SSH_KEY }}

#       # 3️⃣ NAS 호스트 키 등록
#       - name: Add NAS host key
#         run: |
#           mkdir -p ~/.ssh
#           ssh-keyscan -H ${{ secrets.NAS_IP }} >> ~/.ssh/known_hosts

#       # 4️⃣ NAS에 파일 복사 (rsync, node_modules 제외)
#       - name: Rsync to Synology NAS
#         run: |
#           rsync -avz --no-perms \
#             --delete \
#             --exclude='.git' \
#             --exclude='node_modules' \
#             --ignore-errors \
#             -e "ssh -o StrictHostKeyChecking=no" \
#             ./ admin@${{ secrets.NAS_IP }}:/volume1/web/myweb/

#       # 5️⃣ NAS에서 npm install & PM2 재시작 (TTY 없이, sudo 비밀번호 없이)
#       - name: Install dependencies & Restart PM2
#         run: |
#           ssh -o StrictHostKeyChecking=no admin@${{ secrets.NAS_IP }} \
#             "cd /volume1/web/myweb && sudo npm install && sudo /usr/local/bin/pm2 restart all && sudo pm2 save"



name: Deploy to Synology NAS via SSH (rsync + PM2)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ SSH 비밀키 설정
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.NAS_SSH_KEY }}

      # 3️⃣ NAS 호스트 키 등록
      - name: Add NAS host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.NAS_IP }} >> ~/.ssh/known_hosts

      # 4️⃣ SSH 연결 테스트
      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no admin@${{ secrets.NAS_IP }} "echo 'SSH connection successful!'"

      # 5️⃣ NAS에 파일 복사 (rsync, node_modules 제외)
      - name: Rsync to NAS
        run: |
          rsync -avz --no-perms \
            --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --ignore-errors \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ admin@${{ secrets.NAS_IP }}:/volume1/web/myweb/

      # 6️⃣ NAS에서 npm install & PM2 재시작 (TTY 없이, sudo 비밀번호 없이)
      - name: Install dependencies & Restart PM2
        run: |
          ssh -o StrictHostKeyChecking=no admin@${{ secrets.NAS_IP }} \
            "cd /volume1/web/myweb && sudo npm install && sudo /usr/local/bin/pm2 restart all && sudo pm2 save"
